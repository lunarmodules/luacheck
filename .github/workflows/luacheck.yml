# ATTENTION
#
# This is *not* a typical luacheck workflow! Do not copy this to other projects!
# Instead of installing luacheck from somewhere and using it on a code base,
# we're actually building and running the current HEAD version on ourselves:
# basically this is a combination bootstrap test and dogfooding. The upshot is
# that we check both that everything works (and end-to-end test) and that the
# current codebase lints against itself. This ensures we can fix a bug or make
# a breaking change in luacheck without being blocked by our own CI using a
# different luacheck verision.
#
# See the README.md file for examples suitable for use in other projects.

name: Luacheck

on: [ push, pull_request ]

jobs:

  luacheck:
    strategy:
      fail-fast: false
      matrix:
        luaVersion: [ "5.4", "5.3", "5.2", "5.1", "luajit" ] # , "luajit-openresty"
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup ‘lua’
        uses: leafo/gh-actions-lua@v9
        with:
          luaVersion: ${{ matrix.luaVersion }}

      - name: Setup ‘luarocks’
        uses: leafo/gh-actions-luarocks@v4

      - name: Setup dependencies
        run: |
          luarocks install --deps-only luacheck-dev-1.rockspec

      - name: Build ‘luacheck’ (bootstrap)
        run: luarocks make

      - name: Run ‘luacheck’ (dogfood)
        run: luacheck .
